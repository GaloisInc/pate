Choose Entry Point
    > Function Entry "transport_handler" (segment1+0x400c)

segment1+0x4114 [ via: "transport_handler" (segment1+0x400c) ]
    ...
    ...
    ...
        ...
        > Choose desynchronization points

        Choose a desynchronization point:
            > segment1+0x4120 (original)
            > segment1+0x4120 (patched)


segment1+0x4120 [ via: "transport_handler" (segment1+0x400c) ]
    ...
    ...
    ...
        ...
        > Choose synchronization points

        Choose a synchronization point:
            > segment1+0x412a (patched)
            > segment1+0x412a (original)

segment1+0x4120 (original) vs. segment1+0x3dd44 (patched) [ via: "transport_handler" (segment1+0x400c) ]
    ...
        Branch to: "transport_handler" (segment1+0x412a) (original) vs. Call to: "puts" (segment1+0x33ac) Returns to: "transport_handler" (segment1+0x41b8) (patched)
            ...
            ...
            > Remove divergence in equivalence condition
        Call to: "puts" (segment1+0x33ac) Returns to: "transport_handler" (segment1+0x41b8) (original) vs. Jump to: "transport_handler" (segment1+0x412a) (patched)
            ...
            ...
            > Remove divergence in equivalence condition

segment1+0x412a [ via: "transport_handler" (segment1+0x400c) ]
    Modify Proof Node
    Add Assertion
        > 0: Assert condition

segment1+0x412a [ via: "transport_handler" (segment1+0x400c) ]
    Include Location:
        > Include All Registers

Verification Finished
Continue verification?
    > Finish and view final result